!function(){"use strict";const e=new class{constructor(e){this.baseUrl=e.baseUrl,this.headers=e.headers}handleServerResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return fetch(`${this.baseUrl}/cards`,{headers:this.headers}).then(this.handleServerResponse)}loadUserInfo(){return fetch(`${this.baseUrl}/users/me`,{headers:this.headers}).then(this.handleServerResponse)}loadCards(){return fetch("https://around-api.en.tripleten-services.com/v1/cards",{headers:{authorization:"c71139a8-616d-4539-81d5-960dbf139c46"}})}editProfile(e){return fetch(`${this.baseUrl}/users/me`,{method:"PATCH",headers:this.headers,body:e}).then(this.handleServerResponse)}addCard(e){return fetch(`${this.baseUrl}/cards`,{method:"POST",headers:this.headers,body:e}).then(this.handleServerResponse)}removeCard(e){return fetch(`${this.baseUrl}/cards/${e}`,{method:"DELETE",headers:this.headers}).then(this.handleServerResponse)}likeCard(e){return fetch(`${this.baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this.headers}).then(this.handleServerResponse)}unlikeCard(e){return fetch(`${this.baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this.headers}).then(this.handleServerResponse)}updateProfilePicture(e){return fetch(`${this.baseUrl}/users/me/avatar`,{method:"PATCH",headers:this.headers,body:e}).then(this.handleServerResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"c71139a8-616d-4539-81d5-960dbf139c46","Content-Type":"application/json"}});class t{constructor(e,t,s,r){let{name:i,link:n,id:o,isLiked:a}=e;this.handleDeleteConfirm=r,this._name=i,this._link=n,this.id=o,this.isLiked=a,this._cardSelector=t,this._handleImageClick=s}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeButton()})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this.handleDeleteConfirm(this)})),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this._handleImageClick(this)})),this.isLiked&&this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}_setCardNameImageAndDescription(){const e=this._cardElement.querySelector(".card__image"),t=this._cardElement.querySelector(".card__description-text");e.src=this._link,e.alt=this._name,t.textContent=this._name}_handleLikeButton(){this.isLiked?e.unlikeCard(this.id).then((e=>this.liked=!1)):e.likeCard(this.id).then((e=>this.isLiked=!0)),this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}removeCard(){this._cardElement.remove(),this._cardElement=null}getCardElement(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._setEventListeners(),this._setCardNameImageAndDescription(),this._cardElement}}class s{constructor(e,t){this._formEl=document.querySelector(e),this._formOptions=t}_showInputError(e){e.classList.add(this._formOptions.inputErrorClass);const t=this._formEl.querySelector(`#${e.id}-error`);t.textContent=e.validationMessage,t.classList.add(this._formOptions.errorClass)}_hideInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.remove(this._formOptions.inputErrorClass),t.classList.remove(this._formOptions.errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_setEventListeners(){const{inputSelector:e,submitButtonSelector:t}=this._formOptions;this._inputEls=[...this._formEl.querySelectorAll(e)],this._submitButton=this._formEl.querySelector(t),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}_hasInvalidInput(){return this._inputEls.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?(this._submitButton.classList.add(this._formOptions.inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._formOptions.inactiveButtonClass),this._submitButton.disabled=!1)}clearErrors(){this._inputEls.forEach((e=>{this._hideInputError(e,this._formOptions)}))}enableValidation(){this._formEl.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetForm(){this._formEl.reset(),this._toggleButtonState()}}var r=class{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._closeBtn=this._popupElement.querySelector(".modal__close")}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};_handleCloseBtn=()=>{this.close()};handleClickOutside=e=>{Array.from(e.target.classList).includes("modal_opened")&&this.close()};setEventListeners(){this._popupElement.addEventListener("click",this.handleClickOutside),this._closeBtn.addEventListener("click",this._handleCloseBtn)}},i=class extends r{constructor(e,t){super({popupSelector:e}),this._handleFormSubmit=t,this.submit=this.submit.bind(this)}_getInputValues(){const e={};return Array.from(document.querySelectorAll(".modal__input")).forEach((t=>{e[t.name]=t.value})),e}submit(e){e.preventDefault();const t=this._popupElement.querySelector(".modal__save").innerText;this._popupElement.querySelector(".modal__save").innerText="Saving....",this._handleFormSubmit(this._getInputValues()),this._popupElement.querySelector(".modal__save").innerText=t}setEventListeners(){this._popupElement.addEventListener("submit",this.submit),super.setEventListeners()}};const n={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__save",inactiveButtonClass:"modal__save_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible",templateSelector:"#card-template",containerSelector:".cards__list"},o=document.querySelector(".profile__edit-button"),a=document.querySelector(".card__add-button"),l=document.getElementById("profile-description-input"),d=document.getElementById("profile-name-input");o.addEventListener("click",(()=>{const e=v.getUserInfo();d.value=e.name,l.value=e.description,E.open()})),a.addEventListener("click",(()=>{h.open()}));const c=new class extends r{constructor(e){let{popupSelector:t}=e;super({popupSelector:t})}submitAction(e){this.handleSubmitAction=e}setEventListeners(){this._popupElement.addEventListener("submit",(e=>{e.preventDefault(),this.handleSubmitAction()})),super.setEventListeners()}}({popupSelector:"#are-you-sure"});c.setEventListeners();const h=new i("#profile-card-modal",(function(t){let{place:s,link:r}=t;e.addCard(JSON.stringify({name:s,link:r})).then((e=>{I.addItem(g({name:s,link:r,id:e._id})),L.resetForm(),h.close()}))}),"#card-add-button");h.setEventListeners();const u=document.querySelector(".profile__name"),p=document.querySelector(".profile__description"),m=document.querySelector(".profile__image"),_=document.querySelector(".pencil-icon"),v=new class{constructor(e){let{profileName:t,profileDescription:s,profileAvatar:r}=e;this._profileName=t,this._profileDescription=s,this._profileAvatar=r}getUserInfo(){return{name:this._profileName.textContent,description:this._profileDescription.textContent,avatar:this._profileAvatar.src}}setUserInfo(e){e.name.length&&(this._profileName.textContent=e.name),e.description.length&&(this._profileDescription.textContent=e.description),e.avatar?.length&&(this._profileAvatar.src=e.avatar)}}({profileName:u,profileDescription:p,profileAvatar:m}),E=new i("#profile-edit-modal",(t=>{e.editProfile(JSON.stringify({name:t.name,about:t.description})).then((e=>{v.setUserInfo(t),E.close()}))}));E.setEventListeners(),_.addEventListener("click",(()=>{f.open()}));const f=new i("#avatar-edit-modal",(t=>{e.updateProfilePicture(JSON.stringify({avatar:t.avatar})).then((e=>{v.setUserInfo(t),f.close()}))}));f.setEventListeners();const S=new class extends r{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._cardImage=this._popupElement.querySelector(".modal__preview-image"),this._cardTitle=this._popupElement.querySelector(".modal__preview-title")}open(e,t){super.open(),this._cardImage.src=t,this._cardTitle.textContent=e,this._cardImage.alt=e}}({popupSelector:"#modal-image"});S.setEventListeners();const b=new s("#profile-form",n),L=new s("#card-form",n),y=new s("#avatar-form",n);function k(e){S.open(e._name,e._link)}function C(t){c.open(),c.submitAction((()=>{e.removeCard(t.id).then((()=>{t.removeCard(),c.close()})).catch((()=>{}))}))}function g(e){return new t(e,n.templateSelector,k,C).getCardElement()}b.enableValidation(),L.enableValidation(),y.enableValidation();const I=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}renderItems(e){e?.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[],renderer:e=>{I.addItem(g(e))}},n.containerSelector);e.loadUserInfo().then((e=>{v.setUserInfo({name:e.name,description:e.about,avatar:e.avatar})})),e.getInitialCards().then((e=>{e.reverse().forEach((e=>{I.addItem(g({name:e.name,link:e.link,id:e._id,isLiked:e.isLiked}))}))})),I.renderItems()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,