!function(){"use strict";class e{constructor(e,t,s){let{name:n,link:r}=e;this.name=n,this.link=r,this._cardSelector=t,this._handleImageClick=s}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeButton()})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteButton()})),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this._handleImageClick(this)}))}_setCardNameImageAndDescription(){const e=this._cardElement.querySelector(".card__image"),t=this._cardElement.querySelector(".card__description-text");e.src=this.link,e.alt=this.name,t.textContent=this.name}_handleLikeButton(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}_handleDeleteButton(){this._cardElement.remove(),this._cardElement=null}getCardElement(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._setEventListeners(),this._setCardNameImageAndDescription(),this._cardElement}}class t{constructor(e,t){this._formEl=document.querySelector(e),this._formOptions=t}_showInputError(e){e.classList.add(this._formOptions.inputErrorClass);const t=this._formEl.querySelector(`#${e.id}-error`);t.textContent=e.validationMessage,t.classList.add(this._formOptions.errorClass)}_hideInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.remove(this._formOptions.inputErrorClass),t.classList.remove(this._formOptions.errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_setEventListeners(){const{inputSelector:e,submitButtonSelector:t}=this._formOptions;this._inputEls=[...this._formEl.querySelectorAll(e)],this._submitButton=this._formEl.querySelector(t),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}_hasInvalidInput(){return this._inputEls.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?(this._submitButton.classList.add(this._formOptions.inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._formOptions.inactiveButtonClass),this._submitButton.disabled=!1)}clearErrors(){this._inputEls.forEach((e=>{this._hideInputError(e,this._formOptions)}))}enableValidation(){this._formEl.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetForm(){this._formEl.reset(),this._toggleButtonState()}}var s=class{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._closeBtn=this._popupElement.querySelector(".modal__close")}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};_handleCloseBtn=()=>{this.close()};handleClickOutside=e=>{Array.from(e.target.classList).includes("modal_opened")&&this.close()};setEventListeners(){this._popupElement.addEventListener("click",this.handleClickOutside),this._closeBtn.addEventListener("click",this._handleCloseBtn)}},n=class extends s{constructor(e,t){super({popupSelector:e}),this._handleFormSubmit=t,this.submit=this.submit.bind(this)}_getInputValues(){const e={};return Array.from(document.querySelectorAll(".modal__input")).forEach((t=>{e[t.name]=t.value})),e}submit(e){e.preventDefault(),this._handleFormSubmit(this._getInputValues())}setEventListeners(){this._popupElement.addEventListener("submit",this.submit),super.setEventListeners()}};const r={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__save",inactiveButtonClass:"modal__save_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible",templateSelector:"#card-template",containerSelector:".cards__list"},i=document.querySelector(".profile__edit-button"),o=document.querySelector(".card__add-button"),a=document.getElementById("profile-description-input"),l=document.getElementById("profile-name-input");i.addEventListener("click",(()=>{const e=d.getUserInfo();l.value=e.name,a.value=e.description,m.open()})),o.addEventListener("click",(()=>{c.open()}));const c=new n("#profile-card-modal",(function(e){let{place:t,link:s}=e;f.addItem(E({name:t,link:s})),_.resetForm(),c.close()}),"#card-add-button");c.setEventListeners();const d=new class{constructor(e){let{profileName:t,profileDescription:s}=e;this._profileName=t,this._profileDescription=s}getUserInfo(){return{name:this._profileName.textContent,description:this._profileDescription.textContent}}setUserInfo(e){e.name.length&&(this._profileName.textContent=e.name),e.description.length&&(this._profileDescription.textContent=e.description)}}({profileName:document.querySelector(".profile__name"),profileDescription:document.querySelector(".profile__description")}),m=new n("#profile-edit-modal",(e=>{d.setUserInfo(e),m.close()}));m.setEventListeners();const u=new class extends s{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._cardImage=this._popupElement.querySelector(".modal__preview-image"),this._cardTitle=this._popupElement.querySelector(".modal__preview-title")}open(e,t){super.open(),this._cardImage.src=t,this._cardTitle.textContent=e,this._cardImage.alt=e}}({popupSelector:"#modal-image"});u.setEventListeners();const p=new t("#profile-form",r),_=new t("#card-form",r);function h(e){u.open(e.name,e.link)}function E(t){return new e(t,r.templateSelector,h).getCardElement()}p.enableValidation(),_.enableValidation();const f=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{f.addItem(E(e))}},r.containerSelector);f.renderItems()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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L3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL3BhZ2VzL2luZGV4LmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XHJcbiAgY29uc3RydWN0b3IoeyBuYW1lLCBsaW5rIH0sIGNhcmRTZWxlY3RvciwgaGFuZGxlSW1hZ2VDbGljaykge1xyXG4gICAgdGhpcy5uYW1lID0gbmFtZTtcclxuICAgIHRoaXMubGluayA9IGxpbms7XHJcbiAgICB0aGlzLl9jYXJkU2VsZWN0b3IgPSBjYXJkU2VsZWN0b3I7IC8vY2FyZCB0ZW1wbGF0ZVxyXG4gICAgdGhpcy5faGFuZGxlSW1hZ2VDbGljayA9IGhhbmRsZUltYWdlQ2xpY2s7XHJcbiAgfVxyXG5cclxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9jYXJkRWxlbWVudFxyXG4gICAgICAucXVlcnlTZWxlY3RvcihcIi5jYXJkX19saWtlLWJ1dHRvblwiKVxyXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgICB0aGlzLl9oYW5kbGVMaWtlQnV0dG9uKCk7XHJcbiAgICAgIH0pO1xyXG5cclxuICAgIHRoaXMuX2NhcmRFbGVtZW50XHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2RlbGV0ZS1idXR0b25cIilcclxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlRGVsZXRlQnV0dG9uKCk7XHJcbiAgICAgIH0pO1xyXG5cclxuICAgIHRoaXMuX2NhcmRFbGVtZW50XHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2ltYWdlXCIpXHJcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICAgIHRoaXMuX2hhbmRsZUltYWdlQ2xpY2sodGhpcyk7XHJcbiAgICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgX3NldENhcmROYW1lSW1hZ2VBbmREZXNjcmlwdGlvbigpIHtcclxuICAgIGNvbnN0IGNhcmRJbWFnZUVsID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19pbWFnZVwiKTsgLy9hZGRzIGNhcmQgaW1hZ2UgZGl2XHJcbiAgICBjb25zdCBjYXJkTmFtZVRleHRFbCA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgIFwiLmNhcmRfX2Rlc2NyaXB0aW9uLXRleHRcIlxyXG4gICAgKTtcclxuXHJcbiAgICBjYXJkSW1hZ2VFbC5zcmMgPSB0aGlzLmxpbms7IC8vYWRkcyBjYXJkIGltYWdlXHJcbiAgICBjYXJkSW1hZ2VFbC5hbHQgPSB0aGlzLm5hbWU7IC8vYWRkcyBjYXJkIGFsdCB0ZXh0XHJcbiAgICBjYXJkTmFtZVRleHRFbC50ZXh0Q29udGVudCA9IHRoaXMubmFtZTsgLy9EZXNjcmlwdGlvblxyXG4gIH1cclxuXHJcbiAgX2hhbmRsZUxpa2VCdXR0b24oKSB7XHJcbiAgICB0aGlzLl9jYXJkRWxlbWVudFxyXG4gICAgICAucXVlcnlTZWxlY3RvcihcIi5jYXJkX19saWtlLWJ1dHRvblwiKVxyXG4gICAgICAuY2xhc3NMaXN0LnRvZ2dsZShcImNhcmRfX2xpa2UtYnV0dG9uX2FjdGl2ZVwiKTtcclxuICB9XHJcblxyXG4gIF9oYW5kbGVEZWxldGVCdXR0b24oKSB7XHJcbiAgICB0aGlzLl9jYXJkRWxlbWVudC5yZW1vdmUoKTtcclxuICAgIHRoaXMuX2NhcmRFbGVtZW50ID0gbnVsbDtcclxuICB9XHJcblxyXG4gIGdldENhcmRFbGVtZW50KCkge1xyXG4gICAgdGhpcy5fY2FyZEVsZW1lbnQgPSBkb2N1bWVudFxyXG4gICAgICAucXVlcnlTZWxlY3Rvcih0aGlzLl9jYXJkU2VsZWN0b3IpIC8vb3V0ZXIgY29udGFpbmVyIGZvciBjYXJkIGxpc3QgaXRlbSAodGVtcGxhdGUpXHJcbiAgICAgIC5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZFwiKSAvL2xpc3QgaXRlbSBlbGVtZW50IHdoaWNoIGNvbnRhaW5zIGFsbCBwYXJ0cyBvZiB0aGUgY2FyZFxyXG4gICAgICAuY2xvbmVOb2RlKHRydWUpO1xyXG5cclxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7IC8vc2V0dGluZyBldmVudCBsaXN0ZW5lcnMgZm9yIGxpa2UgYnV0dG9uLCBkZWxldGUgYnV0dG9uLlxyXG4gICAgdGhpcy5fc2V0Q2FyZE5hbWVJbWFnZUFuZERlc2NyaXB0aW9uKCk7IC8vZ2V0dGluZyB0aGUgaW1hZ2UgZGl2LCBpbWFnZSwgZGVzY3JpcHRpb24sIGFuZCBzZXR0aW5nIHRoZW0uXHJcblxyXG4gICAgcmV0dXJuIHRoaXMuX2NhcmRFbGVtZW50O1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBGb3JtVmFsaWRhdG9yIHtcclxuICBjb25zdHJ1Y3Rvcihmb3JtU2VsZWN0b3IsIG9wdGlvbnMpIHtcclxuICAgIHRoaXMuX2Zvcm1FbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZm9ybVNlbGVjdG9yKTtcclxuICAgIHRoaXMuX2Zvcm1PcHRpb25zID0gb3B0aW9ucztcclxuICB9XHJcblxyXG4gIF9zaG93SW5wdXRFcnJvcihpbnB1dEVsKSB7XHJcbiAgICBpbnB1dEVsLmNsYXNzTGlzdC5hZGQodGhpcy5fZm9ybU9wdGlvbnMuaW5wdXRFcnJvckNsYXNzKTtcclxuICAgIGNvbnN0IGVycm9yTWVzc2FnZUVsID0gdGhpcy5fZm9ybUVsLnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0RWwuaWR9LWVycm9yYCk7XHJcbiAgICBlcnJvck1lc3NhZ2VFbC50ZXh0Q29udGVudCA9IGlucHV0RWwudmFsaWRhdGlvbk1lc3NhZ2U7XHJcbiAgICBlcnJvck1lc3NhZ2VFbC5jbGFzc0xpc3QuYWRkKHRoaXMuX2Zvcm1PcHRpb25zLmVycm9yQ2xhc3MpO1xyXG4gIH1cclxuICBfaGlkZUlucHV0RXJyb3IoaW5wdXRFbCkge1xyXG4gICAgY29uc3QgZXJyb3JNZXNzYWdlRWwgPSB0aGlzLl9mb3JtRWwucXVlcnlTZWxlY3RvcihgIyR7aW5wdXRFbC5pZH0tZXJyb3JgKTtcclxuICAgIGlucHV0RWwuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9mb3JtT3B0aW9ucy5pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgZXJyb3JNZXNzYWdlRWwuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9mb3JtT3B0aW9ucy5lcnJvckNsYXNzKTtcclxuICB9XHJcblxyXG4gIF9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbCkge1xyXG4gICAgLy9kb24ndCBuZWVkIGZvciBsb29wIGJjIGl0J3MgbG9vcGluZyB0aHJvdWdoIGlucHV0cyBpbiBfc2V0RXZlbnRMaXN0ZW5lcnNcclxuICAgIGNvbnN0IGlzSW5wdXRWYWxpZCA9IGlucHV0RWwudmFsaWRpdHkudmFsaWQ7XHJcbiAgICBpZiAoaXNJbnB1dFZhbGlkKSB7XHJcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWwpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXRFbCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICBjb25zdCB7IGlucHV0U2VsZWN0b3IsIHN1Ym1pdEJ1dHRvblNlbGVjdG9yIH0gPSB0aGlzLl9mb3JtT3B0aW9ucztcclxuICAgIHRoaXMuX2lucHV0RWxzID0gWy4uLnRoaXMuX2Zvcm1FbC5xdWVyeVNlbGVjdG9yQWxsKGlucHV0U2VsZWN0b3IpXTtcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbiA9IHRoaXMuX2Zvcm1FbC5xdWVyeVNlbGVjdG9yKHN1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcclxuICAgIHRoaXMuX2lucHV0RWxzLmZvckVhY2goKGlucHV0RWwpID0+IHtcclxuICAgICAgaW5wdXRFbC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKGV2dCkgPT4ge1xyXG4gICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsKTtcclxuICAgICAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgX2hhc0ludmFsaWRJbnB1dCgpIHtcclxuICAgIHJldHVybiB0aGlzLl9pbnB1dEVscy5zb21lKChpbnB1dEVsKSA9PiB7XHJcbiAgICAgIHJldHVybiAhaW5wdXRFbC52YWxpZGl0eS52YWxpZDtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgX3RvZ2dsZUJ1dHRvblN0YXRlKCkge1xyXG4gICAgaWYgKHRoaXMuX2hhc0ludmFsaWRJbnB1dCgpKSB7XHJcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5jbGFzc0xpc3QuYWRkKHRoaXMuX2Zvcm1PcHRpb25zLmluYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoXHJcbiAgICAgICAgdGhpcy5fZm9ybU9wdGlvbnMuaW5hY3RpdmVCdXR0b25DbGFzc1xyXG4gICAgICApO1xyXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGNsZWFyRXJyb3JzKCkge1xyXG4gICAgdGhpcy5faW5wdXRFbHMuZm9yRWFjaCgoaW5wdXRFbCkgPT4ge1xyXG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsLCB0aGlzLl9mb3JtT3B0aW9ucyk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGVuYWJsZVZhbGlkYXRpb24oKSB7XHJcbiAgICB0aGlzLl9mb3JtRWwuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZSkgPT4ge1xyXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICB9KTtcclxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgfVxyXG5cclxuICByZXNldEZvcm0oKSB7XHJcbiAgICB0aGlzLl9mb3JtRWwucmVzZXQoKTtcclxuICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XHJcbiAgfVxyXG59XHJcbiIsImNsYXNzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcih7IHBvcHVwU2VsZWN0b3IgfSkge1xyXG5cclxuICAgIHRoaXMuX3BvcHVwRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9jbG9zZUJ0biA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19jbG9zZVwiKTtcclxuICB9XHJcbiBcclxuICBvcGVuKCkge1xyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJtb2RhbF9vcGVuZWRcIik7IFxyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpOyBcclxuICB9XHJcblxyXG4gIGNsb3NlKCkge1xyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJtb2RhbF9vcGVuZWRcIik7XHJcbiAgXHJcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XHJcblxyXG4gIH1cclxuXHJcbiAgX2hhbmRsZUVzY0Nsb3NlID0gKGV2dCkgPT4ge1xyXG4gICAgaWYgKGV2dC5rZXkgPT09IFwiRXNjYXBlXCIpIHtcclxuICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIF9oYW5kbGVDbG9zZUJ0biA9ICgpID0+IHtcclxuICAgIHRoaXMuY2xvc2UoKTtcclxuICB9XHJcblxyXG4gIGhhbmRsZUNsaWNrT3V0c2lkZSA9IChldmVudCkgPT4ge1xyXG4gICAgaWYgKEFycmF5LmZyb20oZXZlbnQudGFyZ2V0LmNsYXNzTGlzdCkuaW5jbHVkZXMoXCJtb2RhbF9vcGVuZWRcIikpIHtcclxuICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuaGFuZGxlQ2xpY2tPdXRzaWRlKTtcclxuICAgIHRoaXMuX2Nsb3NlQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLl9oYW5kbGVDbG9zZUJ0bik7XHJcbiAgICBcclxuICB9O1xyXG5cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgUG9wdXA7XHJcblxyXG5cclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5jbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IsIGhhbmRsZUZvcm1TdWJtaXQpIHtcclxuICAgIHN1cGVyKHsgcG9wdXBTZWxlY3RvciB9KTtcclxuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xyXG4gICAgdGhpcy5zdWJtaXQgPSB0aGlzLnN1Ym1pdC5iaW5kKHRoaXMpO1xyXG4gIH1cclxuXHJcbiAgX2dldElucHV0VmFsdWVzKCkge1xyXG4gICAgY29uc3QgZm9ybVZhbHVlcyA9IHt9O1xyXG4gICAgY29uc3QgZm9ybUlucHV0cyA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5tb2RhbF9faW5wdXRcIikpO1xyXG4gICAgZm9ybUlucHV0cy5mb3JFYWNoKChpbnB1dCkgPT4ge1xyXG4gICAgICBmb3JtVmFsdWVzW2lucHV0Lm5hbWVdID0gaW5wdXQudmFsdWU7XHJcbiAgICB9KTtcclxuICAgIHJldHVybiBmb3JtVmFsdWVzO1xyXG4gIH1cclxuXHJcbiAgc3VibWl0KGUpIHtcclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQodGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSk7XHJcbiAgfVxyXG5cclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIHRoaXMuc3VibWl0KTtcclxuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBQb3B1cFdpdGhGb3JtO1xyXG4iLCJleHBvcnQgY29uc3QgaW5pdGlhbENhcmRzID0gW1xyXG4gIHtcclxuICAgIG5hbWU6IFwiWW9zZW1pdGUgVmFsbGV5XCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QveW9zZW1pdGUuanBnXCIsXHJcbiAgfSxcclxuXHJcbiAge1xyXG4gICAgbmFtZTogXCJMYWtlIExvdWlzZVwiLFxyXG4gICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L2xha2UtbG91aXNlLmpwZ1wiLFxyXG4gIH0sXHJcblxyXG4gIHtcclxuICAgIG5hbWU6IFwiQmFsZCBNb3VudGFpbnNcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9iYWxkLW1vdW50YWlucy5qcGdcIixcclxuICB9LFxyXG5cclxuICB7XHJcbiAgICBuYW1lOiBcIkxhdGVtYXJcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYXRlbWFyLmpwZ1wiLFxyXG4gIH0sXHJcblxyXG4gIHtcclxuICAgIG5hbWU6IFwiVmFub2lzZSBOYXRpb25hbCBQYXJrXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvdmFub2lzZS5qcGdcIixcclxuICB9LFxyXG5cclxuICB7XHJcbiAgICBuYW1lOiBcIkxhZ28gZGkgQnJhaWVzXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvbGFnby5qcGdcIixcclxuICB9LFxyXG5dO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IHtcclxuICBmb3JtU2VsZWN0b3I6IFwiLm1vZGFsX19mb3JtXCIsXHJcbiAgaW5wdXRTZWxlY3RvcjogXCIubW9kYWxfX2lucHV0XCIsXHJcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLm1vZGFsX19zYXZlXCIsXHJcbiAgaW5hY3RpdmVCdXR0b25DbGFzczogXCJtb2RhbF9fc2F2ZV9kaXNhYmxlZFwiLFxyXG4gIGlucHV0RXJyb3JDbGFzczogXCJtb2RhbF9faW5wdXRfdHlwZV9lcnJvclwiLFxyXG4gIGVycm9yQ2xhc3M6IFwibW9kYWxfX2Vycm9yX3Zpc2libGVcIixcclxuICB0ZW1wbGF0ZVNlbGVjdG9yOiBcIiNjYXJkLXRlbXBsYXRlXCIsXHJcbiAgY29udGFpbmVyU2VsZWN0b3I6IFwiLmNhcmRzX19saXN0XCIsXHJcbn07XHJcbiIsImltcG9ydCBcIi4vaW5kZXguY3NzXCI7XHJcbmltcG9ydCBDYXJkIGZyb20gXCIuLi9jb21wb25lbnRzL0NhcmQuanNcIjtcclxuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xyXG5pbXBvcnQgRm9ybVZhbGlkYXRvciBmcm9tIFwiLi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanNcIjtcclxuaW1wb3J0IHsgUG9wdXBXaXRoSW1hZ2UgfSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xyXG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4uL2NvbXBvbmVudHMvVXNlckluZm8uanNcIjtcclxuaW1wb3J0IHsgY29uZmlnLCBpbml0aWFsQ2FyZHMgfSBmcm9tIFwiLi4vdXRpbHMvY29uc3RhbnRzLmpzXCI7XHJcblxyXG5jb25zdCBwcm9maWxlRWRpdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fZWRpdC1idXR0b25cIik7XHJcbmNvbnN0IGFkZENhcmRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2FkZC1idXR0b25cIik7XHJcbmNvbnN0IHByb2ZpbGVEZXNjcmlwdGlvbklucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwcm9maWxlLWRlc2NyaXB0aW9uLWlucHV0XCIpO1xyXG5jb25zdCBwcm9maWxlTmFtZUlucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwcm9maWxlLW5hbWUtaW5wdXRcIik7XHJcblxyXG5wcm9maWxlRWRpdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIGNvbnN0IHVzZXJJbmZvID0gcHJvZmlsZVVzZXJJbmZvLmdldFVzZXJJbmZvKCk7XHJcbiAgcHJvZmlsZU5hbWVJbnB1dC52YWx1ZSA9IHVzZXJJbmZvLm5hbWU7XHJcbiAgcHJvZmlsZURlc2NyaXB0aW9uSW5wdXQudmFsdWUgPSB1c2VySW5mby5kZXNjcmlwdGlvbjtcclxuICBwcm9maWxlTW9kYWwub3BlbigpO1xyXG59KTtcclxuXHJcbmFkZENhcmRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICBuZXdDYXJkTW9kYWwub3BlbigpO1xyXG59KTtcclxuXHJcbmNvbnN0IG5ld0NhcmRNb2RhbCA9IG5ldyBQb3B1cFdpdGhGb3JtKFxyXG4gIFwiI3Byb2ZpbGUtY2FyZC1tb2RhbFwiLFxyXG4gIGhhbmRsZUNhcmRDb250ZW50LFxyXG4gIFwiI2NhcmQtYWRkLWJ1dHRvblwiXHJcbik7XHJcblxyXG5uZXdDYXJkTW9kYWwuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuY29uc3QgcHJvZmlsZU5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX25hbWVcIik7XHJcbmNvbnN0IHByb2ZpbGVEZXNjcmlwdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fZGVzY3JpcHRpb25cIik7XHJcbmNvbnN0IHByb2ZpbGVVc2VySW5mbyA9IG5ldyBVc2VySW5mbyh7IHByb2ZpbGVOYW1lLCBwcm9maWxlRGVzY3JpcHRpb24gfSk7XHJcblxyXG5jb25zdCBwcm9maWxlTW9kYWwgPSBuZXcgUG9wdXBXaXRoRm9ybShcIiNwcm9maWxlLWVkaXQtbW9kYWxcIiwgKHVzZXJJbnB1dCkgPT4ge1xyXG4gIHByb2ZpbGVVc2VySW5mby5zZXRVc2VySW5mbyh1c2VySW5wdXQpOyAvL3VzZWQgd2hlbiBzdWJtaXR0aW5nIG1vZGFsXHJcbiAgcHJvZmlsZU1vZGFsLmNsb3NlKCk7XHJcbn0pO1xyXG5cclxucHJvZmlsZU1vZGFsLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5jb25zdCBpbWFnZVBvcHVwID0gbmV3IFBvcHVwV2l0aEltYWdlKHtcclxuICBwb3B1cFNlbGVjdG9yOiBcIiNtb2RhbC1pbWFnZVwiLFxyXG59KTtcclxuXHJcbmltYWdlUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmNvbnN0IHByb2ZpbGVGb3JtVmFsaWRhdGUgPSBuZXcgRm9ybVZhbGlkYXRvcihcIiNwcm9maWxlLWZvcm1cIiwgY29uZmlnKTtcclxuY29uc3QgY2FyZEZvcm1WYWxpZGF0ZSA9IG5ldyBGb3JtVmFsaWRhdG9yKFwiI2NhcmQtZm9ybVwiLCBjb25maWcpO1xyXG5cclxucHJvZmlsZUZvcm1WYWxpZGF0ZS5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbmNhcmRGb3JtVmFsaWRhdGUuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5cclxuLy9pbnB1dHMgYW5kIGluZm9ybWF0aW9uXHJcblxyXG4vLyBXaGVuIHlvdSBjbGljayB0aGUgYWRkIGNhcmQgYnV0dG9uICh0aGUgKyksIGl0IGNyZWF0ZXMgYSBuZXcgY2FyZC5cclxuZnVuY3Rpb24gaGFuZGxlQ2FyZENvbnRlbnQoeyBwbGFjZTogbmFtZSwgbGluayB9KSB7XHJcbiAgY2FyZExpc3QuYWRkSXRlbShjcmVhdGVDYXJkKHsgbmFtZSwgbGluayB9KSk7XHJcbiAgY2FyZEZvcm1WYWxpZGF0ZS5yZXNldEZvcm0oKTtcclxuICBuZXdDYXJkTW9kYWwuY2xvc2UoKTtcclxufVxyXG5cclxuZnVuY3Rpb24gaGFuZGxlSW1hZ2VDbGljayhkYXRhKSB7XHJcbiAgaW1hZ2VQb3B1cC5vcGVuKGRhdGEubmFtZSwgZGF0YS5saW5rKTtcclxufVxyXG5cclxuZnVuY3Rpb24gY3JlYXRlQ2FyZChkYXRhKSB7XHJcbiAgY29uc3QgY2FyZCA9IG5ldyBDYXJkKGRhdGEsIGNvbmZpZy50ZW1wbGF0ZVNlbGVjdG9yLCBoYW5kbGVJbWFnZUNsaWNrKTtcclxuICByZXR1cm4gY2FyZC5nZXRDYXJkRWxlbWVudCgpO1xyXG59XHJcblxyXG5jb25zdCBjYXJkTGlzdCA9IG5ldyBTZWN0aW9uKFxyXG4gIHtcclxuICAgIGl0ZW1zOiBpbml0aWFsQ2FyZHMsXHJcbiAgICByZW5kZXJlcjogKGRhdGEpID0+IHtcclxuICAgICAgY2FyZExpc3QuYWRkSXRlbShjcmVhdGVDYXJkKGRhdGEpKTtcclxuICAgIH0sXHJcbiAgfSxcclxuICBjb25maWcuY29udGFpbmVyU2VsZWN0b3JcclxuKTtcclxuXHJcbmNhcmRMaXN0LnJlbmRlckl0ZW1zKCk7XHJcbiIsImNsYXNzIFVzZXJJbmZvIHtcclxuICBjb25zdHJ1Y3Rvcih7IHByb2ZpbGVOYW1lLCBwcm9maWxlRGVzY3JpcHRpb24gfSkge1xyXG4gICAgdGhpcy5fcHJvZmlsZU5hbWUgPSBwcm9maWxlTmFtZTtcclxuICAgIHRoaXMuX3Byb2ZpbGVEZXNjcmlwdGlvbiA9IHByb2ZpbGVEZXNjcmlwdGlvbjtcclxuICB9XHJcblxyXG4gIGdldFVzZXJJbmZvKCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgbmFtZTogdGhpcy5fcHJvZmlsZU5hbWUudGV4dENvbnRlbnQsXHJcbiAgICAgIGRlc2NyaXB0aW9uOiB0aGlzLl9wcm9maWxlRGVzY3JpcHRpb24udGV4dENvbnRlbnQsXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgc2V0VXNlckluZm8odXNlcklucHV0KSB7XHJcbiAgICBpZiAodXNlcklucHV0Lm5hbWUubGVuZ3RoKSB7XHJcbiAgICAgIHRoaXMuX3Byb2ZpbGVOYW1lLnRleHRDb250ZW50ID0gdXNlcklucHV0Lm5hbWU7XHJcbiAgICB9XHJcbiAgICBpZiAodXNlcklucHV0LmRlc2NyaXB0aW9uLmxlbmd0aCkge1xyXG4gICAgICB0aGlzLl9wcm9maWxlRGVzY3JpcHRpb24udGV4dENvbnRlbnQgPSB1c2VySW5wdXQuZGVzY3JpcHRpb247XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBVc2VySW5mbztcclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IoeyBwb3B1cFNlbGVjdG9yIH0pIHtcclxuICAgIHN1cGVyKHsgcG9wdXBTZWxlY3RvciB9KTtcclxuICAgIHRoaXMuX2NhcmRJbWFnZSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19wcmV2aWV3LWltYWdlXCIpO1xyXG4gICAgdGhpcy5fY2FyZFRpdGxlID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX3ByZXZpZXctdGl0bGVcIik7XHJcbiAgfVxyXG5cclxuICBvcGVuKG5hbWUsIGxpbmspIHtcclxuICAgIHN1cGVyLm9wZW4oKTtcclxuICAgIHRoaXMuX2NhcmRJbWFnZS5zcmMgPSBsaW5rO1xyXG4gICAgdGhpcy5fY2FyZFRpdGxlLnRleHRDb250ZW50ID0gbmFtZTtcclxuICAgIHRoaXMuX2NhcmRJbWFnZS5hbHQgPSBuYW1lO1xyXG4gIH1cclxuXHJcbn1cclxuIiwiY2xhc3MgU2VjdGlvbiB7XHJcbiAgY29uc3RydWN0b3IoeyBpdGVtcywgcmVuZGVyZXIgfSwgc2VsZWN0b3IpIHtcclxuICAgIHRoaXMuX2l0ZW1zID0gaXRlbXM7XHJcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xyXG4gICAgdGhpcy5fY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICByZW5kZXJJdGVtcygpIHtcclxuICAgIHRoaXMuX2l0ZW1zLmZvckVhY2goKGl0ZW0pID0+IHtcclxuICAgICAgdGhpcy5fcmVuZGVyZXIoaXRlbSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGFkZEl0ZW0oZWxlbWVudCkge1xyXG4gICAgdGhpcy5fY29udGFpbmVyLnByZXBlbmQoZWxlbWVudClcclxuICB9XHJcblxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBTZWN0aW9uO1xyXG4iXSwibmFtZXMiOlsiQ2FyZCIsImNvbnN0cnVjdG9yIiwiX3JlZiIsImNhcmRTZWxlY3RvciIsImhhbmRsZUltYWdlQ2xpY2siLCJuYW1lIiwibGluayIsInRoaXMiLCJfY2FyZFNlbGVjdG9yIiwiX2hhbmRsZUltYWdlQ2xpY2siLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJfY2FyZEVsZW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9oYW5kbGVMaWtlQnV0dG9uIiwiX2hhbmRsZURlbGV0ZUJ1dHRvbiIsIl9zZXRDYXJkTmFtZUltYWdlQW5kRGVzY3JpcHRpb24iLCJjYXJkSW1hZ2VFbCIsImNhcmROYW1lVGV4dEVsIiwic3JjIiwiYWx0IiwidGV4dENvbnRlbnQiLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJyZW1vdmUiLCJnZXRDYXJkRWxlbWVudCIsImRvY3VtZW50IiwiY29udGVudCIsImNsb25lTm9kZSIsIkZvcm1WYWxpZGF0b3IiLCJmb3JtU2VsZWN0b3IiLCJvcHRpb25zIiwiX2Zvcm1FbCIsIl9mb3JtT3B0aW9ucyIsIl9zaG93SW5wdXRFcnJvciIsImlucHV0RWwiLCJhZGQiLCJpbnB1dEVycm9yQ2xhc3MiLCJlcnJvck1lc3NhZ2VFbCIsImlkIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJlcnJvckNsYXNzIiwiX2hpZGVJbnB1dEVycm9yIiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsInZhbGlkaXR5IiwidmFsaWQiLCJpbnB1dFNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfaW5wdXRFbHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiX3N1Ym1pdEJ1dHRvbiIsImZvckVhY2giLCJldnQiLCJfdG9nZ2xlQnV0dG9uU3RhdGUiLCJfaGFzSW52YWxpZElucHV0Iiwic29tZSIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJkaXNhYmxlZCIsImNsZWFyRXJyb3JzIiwiZW5hYmxlVmFsaWRhdGlvbiIsImUiLCJwcmV2ZW50RGVmYXVsdCIsInJlc2V0Rm9ybSIsInJlc2V0IiwicG9wdXBTZWxlY3RvciIsIl9wb3B1cEVsZW1lbnQiLCJfY2xvc2VCdG4iLCJvcGVuIiwiX2hhbmRsZUVzY0Nsb3NlIiwiY2xvc2UiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwia2V5IiwiX2hhbmRsZUNsb3NlQnRuIiwiaGFuZGxlQ2xpY2tPdXRzaWRlIiwiZXZlbnQiLCJBcnJheSIsImZyb20iLCJ0YXJnZXQiLCJpbmNsdWRlcyIsInNldEV2ZW50TGlzdGVuZXJzIiwiUG9wdXAiLCJoYW5kbGVGb3JtU3VibWl0Iiwic3VwZXIiLCJfaGFuZGxlRm9ybVN1Ym1pdCIsInN1Ym1pdCIsImJpbmQiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJmb3JtVmFsdWVzIiwiaW5wdXQiLCJ2YWx1ZSIsImNvbmZpZyIsInRlbXBsYXRlU2VsZWN0b3IiLCJjb250YWluZXJTZWxlY3RvciIsInByb2ZpbGVFZGl0QnV0dG9uIiwiYWRkQ2FyZEJ1dHRvbiIsInByb2ZpbGVEZXNjcmlwdGlvbklucHV0IiwiZ2V0RWxlbWVudEJ5SWQiLCJwcm9maWxlTmFtZUlucHV0IiwidXNlckluZm8iLCJwcm9maWxlVXNlckluZm8iLCJnZXRVc2VySW5mbyIsImRlc2NyaXB0aW9uIiwicHJvZmlsZU1vZGFsIiwibmV3Q2FyZE1vZGFsIiwiUG9wdXBXaXRoRm9ybSIsInBsYWNlIiwiY2FyZExpc3QiLCJhZGRJdGVtIiwiY3JlYXRlQ2FyZCIsImNhcmRGb3JtVmFsaWRhdGUiLCJwcm9maWxlTmFtZSIsInByb2ZpbGVEZXNjcmlwdGlvbiIsIl9wcm9maWxlTmFtZSIsIl9wcm9maWxlRGVzY3JpcHRpb24iLCJzZXRVc2VySW5mbyIsInVzZXJJbnB1dCIsImxlbmd0aCIsImltYWdlUG9wdXAiLCJfY2FyZEltYWdlIiwiX2NhcmRUaXRsZSIsInByb2ZpbGVGb3JtVmFsaWRhdGUiLCJkYXRhIiwic2VsZWN0b3IiLCJpdGVtcyIsInJlbmRlcmVyIiwiX2l0ZW1zIiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsInJlbmRlckl0ZW1zIiwiaXRlbSIsImVsZW1lbnQiLCJwcmVwZW5kIl0sInNvdXJjZVJvb3QiOiIifQ==